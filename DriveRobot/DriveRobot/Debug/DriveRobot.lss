
DriveRobot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000260  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001ec  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  00000260  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000260  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000290  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a91  00000000  00000000  00000358  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000075e  00000000  00000000  00000de9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000045b  00000000  00000000  00001547  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000150  00000000  00000000  000019a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000426  00000000  00000000  00001af4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002a3  00000000  00000000  00001f1a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000021bd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 9e 00 	jmp	0x13c	; 0x13c <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ee       	ldi	r30, 0xEC	; 236
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 30       	cpi	r26, 0x05	; 5
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <main>
  9e:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_default>

000000a6 <__vector_default>:
}

void brake(void) {
	forward(0);
	PORTD = 0b01101000;
	PORTB = 0b00001000;
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	0f 90       	pop	r0
  b2:	0f be       	out	0x3f, r0	; 63
  b4:	0f 90       	pop	r0
  b6:	1f 90       	pop	r1
  b8:	18 95       	reti

000000ba <uartInit>:
  ba:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  be:	81 e8       	ldi	r24, 0x81	; 129
  c0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  c4:	80 e9       	ldi	r24, 0x90	; 144
  c6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  ca:	86 e0       	ldi	r24, 0x06	; 6
  cc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  d0:	08 95       	ret

000000d2 <pwmOn>:
  d2:	83 ef       	ldi	r24, 0xF3	; 243
  d4:	84 bd       	out	0x24, r24	; 36
  d6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
  da:	08 95       	ret

000000dc <steer>:
  dc:	61 11       	cpse	r22, r1
  de:	07 c0       	rjmp	.+14     	; 0xee <steer+0x12>
  e0:	17 bc       	out	0x27, r1	; 39
  e2:	18 bc       	out	0x28, r1	; 40
  e4:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
  e8:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
  ec:	08 95       	ret
  ee:	17 bc       	out	0x27, r1	; 39
  f0:	96 2f       	mov	r25, r22
  f2:	99 0f       	add	r25, r25
  f4:	99 0f       	add	r25, r25
  f6:	99 0f       	add	r25, r25
  f8:	69 0f       	add	r22, r25
  fa:	68 bd       	out	0x28, r22	; 40
  fc:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 100:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 104:	89 30       	cpi	r24, 0x09	; 9
 106:	70 f4       	brcc	.+28     	; 0x124 <steer+0x48>
 108:	48 b5       	in	r20, 0x28	; 40
 10a:	28 e0       	ldi	r18, 0x08	; 8
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	b9 01       	movw	r22, r18
 110:	68 1b       	sub	r22, r24
 112:	71 09       	sbc	r23, r1
 114:	cb 01       	movw	r24, r22
 116:	96 2f       	mov	r25, r22
 118:	99 0f       	add	r25, r25
 11a:	89 0f       	add	r24, r25
 11c:	88 0f       	add	r24, r24
 11e:	84 0f       	add	r24, r20
 120:	88 bd       	out	0x28, r24	; 40
 122:	08 95       	ret
 124:	e4 eb       	ldi	r30, 0xB4	; 180
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	20 81       	ld	r18, Z
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	08 97       	sbiw	r24, 0x08	; 8
 12e:	98 2f       	mov	r25, r24
 130:	99 0f       	add	r25, r25
 132:	89 0f       	add	r24, r25
 134:	88 0f       	add	r24, r24
 136:	82 0f       	add	r24, r18
 138:	80 83       	st	Z, r24
 13a:	08 95       	ret

0000013c <__vector_18>:
 13c:	1f 92       	push	r1
 13e:	0f 92       	push	r0
 140:	0f b6       	in	r0, 0x3f	; 63
 142:	0f 92       	push	r0
 144:	11 24       	eor	r1, r1
 146:	2f 93       	push	r18
 148:	3f 93       	push	r19
 14a:	4f 93       	push	r20
 14c:	5f 93       	push	r21
 14e:	6f 93       	push	r22
 150:	7f 93       	push	r23
 152:	8f 93       	push	r24
 154:	9f 93       	push	r25
 156:	af 93       	push	r26
 158:	bf 93       	push	r27
 15a:	ef 93       	push	r30
 15c:	ff 93       	push	r31
 15e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 162:	81 31       	cpi	r24, 0x11	; 17
 164:	11 f4       	brne	.+4      	; 0x16a <__vector_18+0x2e>
 166:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
 16a:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_end>
 16e:	91 e0       	ldi	r25, 0x01	; 1
 170:	9e 0f       	add	r25, r30
 172:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__data_end>
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	ef 5f       	subi	r30, 0xFF	; 255
 17a:	fe 4f       	sbci	r31, 0xFE	; 254
 17c:	80 83       	st	Z, r24
 17e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 182:	84 30       	cpi	r24, 0x04	; 4
 184:	51 f4       	brne	.+20     	; 0x19a <__vector_18+0x5e>
 186:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <read+0x3>
 18a:	80 31       	cpi	r24, 0x10	; 16
 18c:	31 f4       	brne	.+12     	; 0x19a <__vector_18+0x5e>
 18e:	e1 e0       	ldi	r30, 0x01	; 1
 190:	f1 e0       	ldi	r31, 0x01	; 1
 192:	62 81       	ldd	r22, Z+2	; 0x02
 194:	81 81       	ldd	r24, Z+1	; 0x01
 196:	0e 94 6e 00 	call	0xdc	; 0xdc <steer>
 19a:	ff 91       	pop	r31
 19c:	ef 91       	pop	r30
 19e:	bf 91       	pop	r27
 1a0:	af 91       	pop	r26
 1a2:	9f 91       	pop	r25
 1a4:	8f 91       	pop	r24
 1a6:	7f 91       	pop	r23
 1a8:	6f 91       	pop	r22
 1aa:	5f 91       	pop	r21
 1ac:	4f 91       	pop	r20
 1ae:	3f 91       	pop	r19
 1b0:	2f 91       	pop	r18
 1b2:	0f 90       	pop	r0
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	0f 90       	pop	r0
 1b8:	1f 90       	pop	r1
 1ba:	18 95       	reti

000001bc <configPWM>:
}

void configPWM(void) {
	DDRB |= 0b00001000;
 1bc:	23 9a       	sbi	0x04, 3	; 4
	DDRD |= 0b01101000;
 1be:	8a b1       	in	r24, 0x0a	; 10
 1c0:	88 66       	ori	r24, 0x68	; 104
 1c2:	8a b9       	out	0x0a, r24	; 10
	TCCR0B = 0b00000001;
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	85 bd       	out	0x25, r24	; 37
	TCCR2B = 0b00000001;
 1c8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
	TIMSK0 = 0b00000110;
 1cc:	86 e0       	ldi	r24, 0x06	; 6
 1ce:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	TIMSK2 = 0b00000110;
 1d2:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 1d6:	08 95       	ret

000001d8 <main>:

int main(void)
{
	// int test = 0;
	
	configPWM();
 1d8:	0e 94 de 00 	call	0x1bc	; 0x1bc <configPWM>
	pwmOn();
 1dc:	0e 94 69 00 	call	0xd2	; 0xd2 <pwmOn>
	uartInit();
 1e0:	0e 94 5d 00 	call	0xba	; 0xba <uartInit>
	sei();
 1e4:	78 94       	sei
 1e6:	ff cf       	rjmp	.-2      	; 0x1e6 <main+0xe>

000001e8 <_exit>:
 1e8:	f8 94       	cli

000001ea <__stop_program>:
 1ea:	ff cf       	rjmp	.-2      	; 0x1ea <__stop_program>

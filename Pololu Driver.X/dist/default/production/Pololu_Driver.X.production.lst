

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Oct 30 13:58:17 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.43
    19                           ; Generated 25/07/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F1503 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000E                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  010C                     	;# 
    95  010E                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011D                     	;# 
   106  018C                     	;# 
   107  018E                     	;# 
   108  0191                     	;# 
   109  0191                     	;# 
   110  0192                     	;# 
   111  0193                     	;# 
   112  0193                     	;# 
   113  0194                     	;# 
   114  0195                     	;# 
   115  0196                     	;# 
   116  0197                     	;# 
   117  020C                     	;# 
   118  0211                     	;# 
   119  0211                     	;# 
   120  0212                     	;# 
   121  0212                     	;# 
   122  0213                     	;# 
   123  0213                     	;# 
   124  0214                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0215                     	;# 
   129  0216                     	;# 
   130  0216                     	;# 
   131  0217                     	;# 
   132  0217                     	;# 
   133  0391                     	;# 
   134  0392                     	;# 
   135  0393                     	;# 
   136  0498                     	;# 
   137  0498                     	;# 
   138  0499                     	;# 
   139  049A                     	;# 
   140  049B                     	;# 
   141  049B                     	;# 
   142  049C                     	;# 
   143  049D                     	;# 
   144  049E                     	;# 
   145  049F                     	;# 
   146  0611                     	;# 
   147  0612                     	;# 
   148  0613                     	;# 
   149  0613                     	;# 
   150  0614                     	;# 
   151  0615                     	;# 
   152  0616                     	;# 
   153  0616                     	;# 
   154  0617                     	;# 
   155  0618                     	;# 
   156  0619                     	;# 
   157  0619                     	;# 
   158  061A                     	;# 
   159  061B                     	;# 
   160  061C                     	;# 
   161  061C                     	;# 
   162  0691                     	;# 
   163  0692                     	;# 
   164  0693                     	;# 
   165  0694                     	;# 
   166  0695                     	;# 
   167  0F0F                     	;# 
   168  0F10                     	;# 
   169  0F11                     	;# 
   170  0F12                     	;# 
   171  0F13                     	;# 
   172  0F14                     	;# 
   173  0F15                     	;# 
   174  0F16                     	;# 
   175  0F17                     	;# 
   176  0F18                     	;# 
   177  0F19                     	;# 
   178  0F1A                     	;# 
   179  0F1B                     	;# 
   180  0F1C                     	;# 
   181  0F1D                     	;# 
   182  0F1E                     	;# 
   183  0F1F                     	;# 
   184  0FE3                     	;# 
   185  0FE4                     	;# 
   186  0FE5                     	;# 
   187  0FE6                     	;# 
   188  0FE7                     	;# 
   189  0FE8                     	;# 
   190  0FE9                     	;# 
   191  0FEA                     	;# 
   192  0FEB                     	;# 
   193  0FED                     	;# 
   194  0FEE                     	;# 
   195  0FEF                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000E                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  008C                     	;# 
   223  008E                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010E                     	;# 
   240  0111                     	;# 
   241  0112                     	;# 
   242  0113                     	;# 
   243  0114                     	;# 
   244  0115                     	;# 
   245  0116                     	;# 
   246  0117                     	;# 
   247  0118                     	;# 
   248  0119                     	;# 
   249  011D                     	;# 
   250  018C                     	;# 
   251  018E                     	;# 
   252  0191                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0194                     	;# 
   258  0195                     	;# 
   259  0196                     	;# 
   260  0197                     	;# 
   261  020C                     	;# 
   262  0211                     	;# 
   263  0211                     	;# 
   264  0212                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0213                     	;# 
   268  0214                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0391                     	;# 
   278  0392                     	;# 
   279  0393                     	;# 
   280  0498                     	;# 
   281  0498                     	;# 
   282  0499                     	;# 
   283  049A                     	;# 
   284  049B                     	;# 
   285  049B                     	;# 
   286  049C                     	;# 
   287  049D                     	;# 
   288  049E                     	;# 
   289  049F                     	;# 
   290  0611                     	;# 
   291  0612                     	;# 
   292  0613                     	;# 
   293  0613                     	;# 
   294  0614                     	;# 
   295  0615                     	;# 
   296  0616                     	;# 
   297  0616                     	;# 
   298  0617                     	;# 
   299  0618                     	;# 
   300  0619                     	;# 
   301  0619                     	;# 
   302  061A                     	;# 
   303  061B                     	;# 
   304  061C                     	;# 
   305  061C                     	;# 
   306  0691                     	;# 
   307  0692                     	;# 
   308  0693                     	;# 
   309  0694                     	;# 
   310  0695                     	;# 
   311  0F0F                     	;# 
   312  0F10                     	;# 
   313  0F11                     	;# 
   314  0F12                     	;# 
   315  0F13                     	;# 
   316  0F14                     	;# 
   317  0F15                     	;# 
   318  0F16                     	;# 
   319  0F17                     	;# 
   320  0F18                     	;# 
   321  0F19                     	;# 
   322  0F1A                     	;# 
   323  0F1B                     	;# 
   324  0F1C                     	;# 
   325  0F1D                     	;# 
   326  0F1E                     	;# 
   327  0F1F                     	;# 
   328  0FE3                     	;# 
   329  0FE4                     	;# 
   330  0FE5                     	;# 
   331  0FE6                     	;# 
   332  0FE7                     	;# 
   333  0FE8                     	;# 
   334  0FE9                     	;# 
   335  0FEA                     	;# 
   336  0FEB                     	;# 
   337  0FED                     	;# 
   338  0FEE                     	;# 
   339  0FEF                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0008                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000E                     	;# 
   354  0011                     	;# 
   355  0012                     	;# 
   356  0013                     	;# 
   357  0015                     	;# 
   358  0016                     	;# 
   359  0016                     	;# 
   360  0017                     	;# 
   361  0018                     	;# 
   362  0019                     	;# 
   363  001A                     	;# 
   364  001B                     	;# 
   365  001C                     	;# 
   366  008C                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0099                     	;# 
   375  009A                     	;# 
   376  009B                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  010C                     	;# 
   383  010E                     	;# 
   384  0111                     	;# 
   385  0112                     	;# 
   386  0113                     	;# 
   387  0114                     	;# 
   388  0115                     	;# 
   389  0116                     	;# 
   390  0117                     	;# 
   391  0118                     	;# 
   392  0119                     	;# 
   393  011D                     	;# 
   394  018C                     	;# 
   395  018E                     	;# 
   396  0191                     	;# 
   397  0191                     	;# 
   398  0192                     	;# 
   399  0193                     	;# 
   400  0193                     	;# 
   401  0194                     	;# 
   402  0195                     	;# 
   403  0196                     	;# 
   404  0197                     	;# 
   405  020C                     	;# 
   406  0211                     	;# 
   407  0211                     	;# 
   408  0212                     	;# 
   409  0212                     	;# 
   410  0213                     	;# 
   411  0213                     	;# 
   412  0214                     	;# 
   413  0214                     	;# 
   414  0215                     	;# 
   415  0215                     	;# 
   416  0215                     	;# 
   417  0216                     	;# 
   418  0216                     	;# 
   419  0217                     	;# 
   420  0217                     	;# 
   421  0391                     	;# 
   422  0392                     	;# 
   423  0393                     	;# 
   424  0498                     	;# 
   425  0498                     	;# 
   426  0499                     	;# 
   427  049A                     	;# 
   428  049B                     	;# 
   429  049B                     	;# 
   430  049C                     	;# 
   431  049D                     	;# 
   432  049E                     	;# 
   433  049F                     	;# 
   434  0611                     	;# 
   435  0612                     	;# 
   436  0613                     	;# 
   437  0613                     	;# 
   438  0614                     	;# 
   439  0615                     	;# 
   440  0616                     	;# 
   441  0616                     	;# 
   442  0617                     	;# 
   443  0618                     	;# 
   444  0619                     	;# 
   445  0619                     	;# 
   446  061A                     	;# 
   447  061B                     	;# 
   448  061C                     	;# 
   449  061C                     	;# 
   450  0691                     	;# 
   451  0692                     	;# 
   452  0693                     	;# 
   453  0694                     	;# 
   454  0695                     	;# 
   455  0F0F                     	;# 
   456  0F10                     	;# 
   457  0F11                     	;# 
   458  0F12                     	;# 
   459  0F13                     	;# 
   460  0F14                     	;# 
   461  0F15                     	;# 
   462  0F16                     	;# 
   463  0F17                     	;# 
   464  0F18                     	;# 
   465  0F19                     	;# 
   466  0F1A                     	;# 
   467  0F1B                     	;# 
   468  0F1C                     	;# 
   469  0F1D                     	;# 
   470  0F1E                     	;# 
   471  0F1F                     	;# 
   472  0FE3                     	;# 
   473  0FE4                     	;# 
   474  0FE5                     	;# 
   475  0FE6                     	;# 
   476  0FE7                     	;# 
   477  0FE8                     	;# 
   478  0FE9                     	;# 
   479  0FEA                     	;# 
   480  0FEB                     	;# 
   481  0FED                     	;# 
   482  0FEE                     	;# 
   483  0FEF                     	;# 
   484                           
   485                           	psect	stringtext1
   486  0755                     __pstringtext1:	
   487  0755                     _RX_PW_P:	
   488  0755  3411               	retlw	17
   489  0756  3412               	retlw	18
   490  0757  3413               	retlw	19
   491  0758  3414               	retlw	20
   492  0759  3415               	retlw	21
   493  075A  3416               	retlw	22
   494  075B                     __end_of_RX_PW_P:	
   495                           
   496                           	psect	stringtext2
   497  074F                     __pstringtext2:	
   498  074F                     _RX_ADDR_P:	
   499  074F  340A               	retlw	10
   500  0750  340B               	retlw	11
   501  0751  340C               	retlw	12
   502  0752  340D               	retlw	13
   503  0753  340E               	retlw	14
   504  0754  340F               	retlw	15
   505  0755                     __end_of_RX_ADDR_P:	
   506                           
   507                           	psect	stringtext3
   508  0749                     __pstringtext3:	
   509  0749                     _TX_ADDR:	
   510  0749  3410               	retlw	16
   511  074A                     __end_of_TX_ADDR:	
   512  0011                     _PIR1bits	set	17
   513  0095                     _OPTION_REGbits	set	149
   514  008E                     _TRISCbits	set	142
   515  008C                     _TRISAbits	set	140
   516  010E                     _LATCbits	set	270
   517  011D                     _APFCON	set	285
   518  010C                     _LATAbits	set	268
   519  018E                     _ANSELC	set	398
   520  018C                     _ANSELA	set	396
   521  0211                     _SSP1BUF	set	529
   522  0214                     _SSP1STATbits	set	532
   523  0215                     _SSP1CON1bits	set	533
   524  020C                     _WPUAbits	set	524
   525                           
   526                           ; #config settings
   527  0000                     
   528                           	psect	cinit
   529  07FE                     start_initialization:	
   530  07FE                     __initialization:	
   531  07FE                     end_of_initialization:	
   532                           ;End of C runtime variable initialization code
   533                           
   534  07FE                     __end_of__initialization:	
   535  07FE  0020               	movlb	0
   536  07FF  2F69               	ljmp	_main	;jump to C main() function
   537                           
   538                           	psect	cstackCOMMON
   539  0070                     __pcstackCOMMON:	
   540  0070                     ?_uartWriteByte:	
   541  0070                     ??_uartWriteByte:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_configIO:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ??_configIO:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_SPI_init:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ??_SPI_init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_uartWritePacket:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_craftPacket:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_initUart:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_initUart:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_main:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     craftPacket@y:	
   572                           ; 1 bytes @ 0x0
   573                           
   574                           
   575                           ; 1 bytes @ 0x0
   576  0070                     	ds	1
   577  0071                     uartWriteByte@dat:	
   578  0071                     craftPacket@packet:	
   579                           ; 1 bytes @ 0x1
   580                           
   581                           
   582                           ; 1 bytes @ 0x1
   583  0071                     	ds	1
   584  0072                     ??_craftPacket:	
   585  0072                     uartWriteByte@b:	
   586                           ; 1 bytes @ 0x2
   587                           
   588                           
   589                           ; 1 bytes @ 0x2
   590  0072                     	ds	1
   591  0073                     ??_uartWritePacket:	
   592  0073                     craftPacket@x:	
   593                           ; 1 bytes @ 0x3
   594                           
   595                           
   596                           ; 1 bytes @ 0x3
   597  0073                     	ds	1
   598  0074                     uartWritePacket@packet:	
   599                           
   600                           ; 1 bytes @ 0x4
   601  0074                     	ds	1
   602  0075                     uartWritePacket@i:	
   603                           
   604                           ; 1 bytes @ 0x5
   605  0075                     	ds	1
   606  0076                     ??_main:	
   607                           
   608                           ; 1 bytes @ 0x6
   609  0076                     	ds	2
   610  0078                     main@packet:	
   611                           
   612                           ; 4 bytes @ 0x8
   613  0078                     	ds	4
   614                           
   615                           	psect	maintext
   616  0769                     __pmaintext:	
   617 ;;
   618 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   619 ;;
   620 ;; *************** function _main *****************
   621 ;; Defined at:
   622 ;;		line 37 in file "main.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  packet          4    8[COMMON] unsigned char [4]
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : B1F/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1
   636 ;;      Params:         0       0       0
   637 ;;      Locals:         4       0       0
   638 ;;      Temps:          2       0       0
   639 ;;      Totals:         6       0       0
   640 ;;Total ram usage:        6 bytes
   641 ;; Hardware stack levels required when called:    2
   642 ;; This function calls:
   643 ;;		_SPI_init
   644 ;;		_configIO
   645 ;;		_craftPacket
   646 ;;		_initUart
   647 ;;		_uartWritePacket
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _main
   655  0769                     _main:	
   656                           
   657                           ;main.c: 39: initUart();
   658                           
   659                           ;incstack = 0
   660                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   661  0769  274A               	fcall	_initUart
   662                           
   663                           ;main.c: 40: configIO();
   664  076A  2779               	fcall	_configIO
   665                           
   666                           ;main.c: 41: SPI_init();
   667  076B  275B               	fcall	_SPI_init
   668  076C                     l622:	
   669                           ;main.c: 43: uint8_t packet[4];
   670                           ;main.c: 45: while(1) {
   671                           
   672                           
   673                           ;main.c: 46: craftPacket(5, 5, packet);
   674  076C  3005               	movlw	5
   675  076D  00F6               	movwf	??_main
   676  076E  0876               	movf	??_main,w
   677  076F  00F0               	movwf	craftPacket@y
   678  0770  3078               	movlw	(low (main@packet| 0))& (0+255)
   679  0771  00F7               	movwf	??_main+1
   680  0772  0877               	movf	??_main+1,w
   681  0773  00F1               	movwf	craftPacket@packet
   682  0774  3005               	movlw	5
   683  0775  27CB               	fcall	_craftPacket
   684                           
   685                           ;main.c: 47: uartWritePacket(packet);
   686  0776  3078               	movlw	(low (main@packet| 0))& (0+255)
   687  0777  278B               	fcall	_uartWritePacket
   688  0778  2F6C               	goto	l622
   689  0779                     __end_of_main:	
   690                           ;main.c: 48: }
   691                           ;main.c: 50: return;
   692                           
   693                           
   694                           	psect	text1
   695  078B                     __ptext1:	
   696 ;; *************** function _uartWritePacket *****************
   697 ;; Defined at:
   698 ;;		line 5 in file "pololu_cmd.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  packet          1    wreg     PTR unsigned char 
   701 ;;		 -> main@packet(4), 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  packet          1    4[COMMON] PTR unsigned char 
   704 ;;		 -> main@packet(4), 
   705 ;;  i               1    5[COMMON] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1
   715 ;;      Params:         0       0       0
   716 ;;      Locals:         2       0       0
   717 ;;      Temps:          1       0       0
   718 ;;      Totals:         3       0       0
   719 ;;Total ram usage:        3 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    1
   722 ;; This function calls:
   723 ;;		_uartWriteByte
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _uartWritePacket
   731  078B                     _uartWritePacket:	
   732                           
   733                           ;incstack = 0
   734                           ; Regs used in _uartWritePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   735                           ;uartWritePacket@packet stored from wreg
   736  078B  00F4               	movwf	uartWritePacket@packet
   737                           
   738                           ;pololu_cmd.c: 6: for(uint8_t i = 0; i < 4; ++i) {
   739  078C  01F5               	clrf	uartWritePacket@i
   740  078D                     L1:	
   741  078D  3004               	movlw	4
   742  078E  0275               	subwf	uartWritePacket@i,w
   743  078F  1803               	btfsc	3,0
   744  0790  0008               	return
   745                           
   746                           ;pololu_cmd.c: 7: uartWriteByte(packet[i]);
   747  0791  0875               	movf	uartWritePacket@i,w
   748  0792  0774               	addwf	uartWritePacket@packet,w
   749  0793  00F3               	movwf	??_uartWritePacket
   750  0794  0873               	movf	??_uartWritePacket,w
   751  0795  0086               	movwf	6
   752  0796  0187               	clrf	7
   753  0797  0801               	movf	1,w
   754  0798  279E               	fcall	_uartWriteByte
   755  0799  3001               	movlw	1
   756  079A  00F3               	movwf	??_uartWritePacket
   757  079B  0873               	movf	??_uartWritePacket,w
   758  079C  07F5               	addwf	uartWritePacket@i,f
   759  079D  2F8D               	goto	L1
   760  079E                     __end_of_uartWritePacket:	
   761                           
   762                           	psect	text2
   763  079E                     __ptext2:	
   764 ;; *************** function _uartWriteByte *****************
   765 ;; Defined at:
   766 ;;		line 11 in file "pololu_cmd.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  dat             1    wreg     unsigned char 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  dat             1    1[COMMON] unsigned char 
   771 ;;  b               1    2[COMMON] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1
   781 ;;      Params:         0       0       0
   782 ;;      Locals:         2       0       0
   783 ;;      Temps:          1       0       0
   784 ;;      Totals:         3       0       0
   785 ;;Total ram usage:        3 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_uartWritePacket
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function _uartWriteByte
   796  079E                     _uartWriteByte:	
   797                           
   798                           ;incstack = 0
   799                           ; Regs used in _uartWriteByte: [wreg+status,2+status,0]
   800                           ;uartWriteByte@dat stored from wreg
   801  079E  00F1               	movwf	uartWriteByte@dat
   802                           
   803                           ;pololu_cmd.c: 12: LATAbits.LATA1 = 0;
   804  079F  0022               	movlb	2	; select bank2
   805  07A0  108C               	bcf	12,1	;volatile
   806                           
   807                           ;pololu_cmd.c: 13: _delay((unsigned long)(((1000000/9600))*(16000000UL/4000000.0)));
   808  07A1  308A               	movlw	138
   809  07A2                     u137:	
   810  07A2  0B89               	decfsz	9,f
   811  07A3  2FA2               	goto	u137
   812  07A4  3200               	nop2
   813                           
   814                           ;pololu_cmd.c: 14: for(uint8_t b = 0; b < 8; ++b) {
   815  07A5  01F2               	clrf	uartWriteByte@b
   816  07A6  3008               	movlw	8
   817  07A7  0272               	subwf	uartWriteByte@b,w
   818  07A8  1803               	btfsc	3,0
   819  07A9  2FC4               	goto	l17
   820  07AA                     l492:	
   821                           
   822                           ;pololu_cmd.c: 15: if(((dat >> b) & 0x01) == 0x01) {
   823  07AA  0871               	movf	uartWriteByte@dat,w
   824  07AB  00F0               	movwf	??_uartWriteByte
   825  07AC  0A72               	incf	uartWriteByte@b,w
   826  07AD  2FAF               	goto	u24
   827  07AE                     u25:	
   828  07AE  36F0               	lsrf	??_uartWriteByte,f
   829  07AF                     u24:	
   830  07AF  0B89               	decfsz	9,f
   831  07B0  2FAE               	goto	u25
   832  07B1  1C70               	btfss	??_uartWriteByte,0
   833  07B2  2FB6               	goto	l18
   834                           
   835                           ;pololu_cmd.c: 16: LATAbits.LATA1 = 1;
   836  07B3  0022               	movlb	2	; select bank2
   837  07B4  148C               	bsf	12,1	;volatile
   838                           
   839                           ;pololu_cmd.c: 17: } else {
   840  07B5  2FB8               	goto	l496
   841  07B6                     l18:	
   842                           
   843                           ;pololu_cmd.c: 18: LATAbits.LATA1 = 0;
   844  07B6  0022               	movlb	2	; select bank2
   845  07B7  108C               	bcf	12,1	;volatile
   846  07B8                     l496:	
   847                           
   848                           ;pololu_cmd.c: 19: }
   849                           ;pololu_cmd.c: 20: _delay((unsigned long)(((1000000/9600))*(16000000UL/4000000.0)));
   850  07B8  308A               	movlw	138
   851  07B9                     u147:	
   852  07B9  0B89               	decfsz	9,f
   853  07BA  2FB9               	goto	u147
   854  07BB  3200               	nop2
   855  07BC  3001               	movlw	1
   856  07BD  00F0               	movwf	??_uartWriteByte
   857  07BE  0870               	movf	??_uartWriteByte,w
   858  07BF  07F2               	addwf	uartWriteByte@b,f
   859  07C0  3008               	movlw	8
   860  07C1  0272               	subwf	uartWriteByte@b,w
   861  07C2  1C03               	skipc
   862  07C3  2FAA               	goto	l492
   863  07C4                     l17:	
   864                           
   865                           ;pololu_cmd.c: 21: }
   866                           ;pololu_cmd.c: 22: LATAbits.LATA1 = 1;
   867  07C4  0022               	movlb	2	; select bank2
   868  07C5  148C               	bsf	12,1	;volatile
   869                           
   870                           ;pololu_cmd.c: 23: _delay((unsigned long)(((1000000/9600))*(16000000UL/4000000.0)));
   871  07C6  308A               	movlw	138
   872  07C7                     u157:	
   873  07C7  0B89               	decfsz	9,f
   874  07C8  2FC7               	goto	u157
   875  07C9  3200               	nop2
   876  07CA  0008               	return
   877  07CB                     __end_of_uartWriteByte:	
   878                           
   879                           	psect	text3
   880  074A                     __ptext3:	
   881 ;; *************** function _initUart *****************
   882 ;; Defined at:
   883 ;;		line 35 in file "pololu_cmd.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		None
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1
   897 ;;      Params:         0       0       0
   898 ;;      Locals:         0       0       0
   899 ;;      Temps:          0       0       0
   900 ;;      Totals:         0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           
   911                           ;psect for function _initUart
   912  074A                     _initUart:	
   913                           
   914                           ;pololu_cmd.c: 36: TRISAbits.TRISA1 = 0;
   915                           
   916                           ;incstack = 0
   917                           ; Regs used in _initUart: []
   918  074A  0021               	movlb	1	; select bank1
   919  074B  108C               	bcf	12,1	;volatile
   920                           
   921                           ;pololu_cmd.c: 37: LATAbits.LATA1 = 1;
   922  074C  0022               	movlb	2	; select bank2
   923  074D  148C               	bsf	12,1	;volatile
   924  074E  0008               	return
   925  074F                     __end_of_initUart:	
   926                           
   927                           	psect	text4
   928  07CB                     __ptext4:	
   929 ;; *************** function _craftPacket *****************
   930 ;; Defined at:
   931 ;;		line 26 in file "pololu_cmd.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  x               1    wreg     unsigned char 
   934 ;;  y               1    0[COMMON] unsigned char 
   935 ;;  packet          1    1[COMMON] PTR unsigned char 
   936 ;;		 -> main@packet(4), 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  x               1    3[COMMON] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1
   948 ;;      Params:         2       0       0
   949 ;;      Locals:         1       0       0
   950 ;;      Temps:          1       0       0
   951 ;;      Totals:         4       0       0
   952 ;;Total ram usage:        4 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _craftPacket
   963  07CB                     _craftPacket:	
   964                           
   965                           ;incstack = 0
   966                           ; Regs used in _craftPacket: [wreg+fsr1l+fsr1h+status,2+status,0]
   967                           ;craftPacket@x stored from wreg
   968  07CB  00F3               	movwf	craftPacket@x
   969                           
   970                           ;pololu_cmd.c: 27: packet[0] = 12;
   971  07CC  300C               	movlw	12
   972  07CD  00F2               	movwf	??_craftPacket
   973  07CE  0871               	movf	craftPacket@packet,w
   974  07CF  0086               	movwf	6
   975  07D0  0187               	clrf	7
   976  07D1  0872               	movf	??_craftPacket,w
   977  07D2  0081               	movwf	1
   978                           
   979                           ;pololu_cmd.c: 28: packet[3] = 11;
   980  07D3  300B               	movlw	11
   981  07D4  00F2               	movwf	??_craftPacket
   982  07D5  0871               	movf	craftPacket@packet,w
   983  07D6  3E03               	addlw	3
   984  07D7  0086               	movwf	6
   985  07D8  0187               	clrf	7
   986  07D9  0872               	movf	??_craftPacket,w
   987  07DA  0081               	movwf	1
   988                           
   989                           ;pololu_cmd.c: 29: if(x > 10) packet[1] = 10;
   990  07DB  300B               	movlw	11
   991  07DC  0273               	subwf	craftPacket@x,w
   992  07DD  1C03               	skipc
   993  07DE  2FE1               	goto	l608
   994  07DF  300A               	movlw	10
   995  07E0  2FE2               	goto	L2
   996  07E1                     l608:	
   997                           
   998                           ;pololu_cmd.c: 30: else packet[1] = x;
   999  07E1  0873               	movf	craftPacket@x,w
  1000  07E2                     L2:	
  1001  07E2  00F2               	movwf	??_craftPacket
  1002  07E3  0A71               	incf	craftPacket@packet,w
  1003  07E4  0086               	movwf	6
  1004  07E5  0187               	clrf	7
  1005  07E6  0872               	movf	??_craftPacket,w
  1006  07E7  0081               	movwf	1
  1007                           
  1008                           ;pololu_cmd.c: 31: if(y > 10) packet[2] = 10;
  1009  07E8  300B               	movlw	11
  1010  07E9  0270               	subwf	craftPacket@y,w
  1011  07EA  1C03               	skipc
  1012  07EB  2FF5               	goto	l614
  1013  07EC  300A               	movlw	10
  1014  07ED  00F2               	movwf	??_craftPacket
  1015  07EE  0871               	movf	craftPacket@packet,w
  1016  07EF  3E02               	addlw	2
  1017  07F0  0086               	movwf	6
  1018  07F1  0187               	clrf	7
  1019  07F2  0872               	movf	??_craftPacket,w
  1020  07F3  0081               	movwf	1
  1021  07F4  0008               	return
  1022  07F5                     l614:	
  1023                           
  1024                           ;pololu_cmd.c: 32: else packet[2] = y;
  1025  07F5  0870               	movf	craftPacket@y,w
  1026  07F6  00F2               	movwf	??_craftPacket
  1027  07F7  0871               	movf	craftPacket@packet,w
  1028  07F8  3E02               	addlw	2
  1029  07F9  0086               	movwf	6
  1030  07FA  0187               	clrf	7
  1031  07FB  0872               	movf	??_craftPacket,w
  1032  07FC  0081               	movwf	1
  1033  07FD  0008               	return
  1034  07FE                     __end_of_craftPacket:	
  1035                           
  1036                           	psect	text5
  1037  075B                     __ptext5:	
  1038 ;; *************** function _SPI_init *****************
  1039 ;; Defined at:
  1040 ;;		line 32 in file "spi.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0, pclath, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1
  1054 ;;      Params:         0       0       0
  1055 ;;      Locals:         0       0       0
  1056 ;;      Temps:          0       0       0
  1057 ;;      Totals:         0       0       0
  1058 ;;Total ram usage:        0 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    1
  1061 ;; This function calls:
  1062 ;;		_configIO
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _SPI_init
  1070  075B                     _SPI_init:	
  1071                           
  1072                           ;spi.c: 33: SSP1CON1bits.SSPEN = 0;
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _SPI_init: [wreg+status,2+status,0+pclath+cstack]
  1076  075B  0024               	movlb	4	; select bank4
  1077  075C  1295               	bcf	21,5	;volatile
  1078                           
  1079                           ;spi.c: 34: configIO();
  1080  075D  2779               	fcall	_configIO
  1081                           
  1082                           ;spi.c: 35: SSP1CON1bits.CKP = 0;
  1083  075E  0024               	movlb	4	; select bank4
  1084  075F  1215               	bcf	21,4	;volatile
  1085                           
  1086                           ;spi.c: 36: SSP1STATbits.CKE = 1;
  1087  0760  1714               	bsf	20,6	;volatile
  1088                           
  1089                           ;spi.c: 37: SSP1STATbits.SMP = 0;
  1090  0761  1394               	bcf	20,7	;volatile
  1091                           
  1092                           ;spi.c: 38: SSP1CON1bits.SSPM = 0b0000;
  1093  0762  30F0               	movlw	-16
  1094  0763  0595               	andwf	21,f	;volatile
  1095                           
  1096                           ;spi.c: 39: PIR1bits.SSP1IF = 0;
  1097  0764  0020               	movlb	0	; select bank0
  1098  0765  1191               	bcf	17,3	;volatile
  1099                           
  1100                           ;spi.c: 40: SSP1CON1bits.SSPEN = 1;
  1101  0766  0024               	movlb	4	; select bank4
  1102  0767  1695               	bsf	21,5	;volatile
  1103  0768  0008               	return
  1104  0769                     __end_of_SPI_init:	
  1105                           
  1106                           	psect	text6
  1107  0779                     __ptext6:	
  1108 ;; *************** function _configIO *****************
  1109 ;; Defined at:
  1110 ;;		line 18 in file "spi.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1
  1124 ;;      Params:         0       0       0
  1125 ;;      Locals:         0       0       0
  1126 ;;      Temps:          0       0       0
  1127 ;;      Totals:         0       0       0
  1128 ;;Total ram usage:        0 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;;		_SPI_init
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _configIO
  1140  0779                     _configIO:	
  1141                           
  1142                           ;spi.c: 19: TRISCbits.TRISC3 = 0;
  1143                           
  1144                           ;incstack = 0
  1145                           ; Regs used in _configIO: [wreg+status,2]
  1146  0779  0021               	movlb	1	; select bank1
  1147  077A  118E               	bcf	14,3	;volatile
  1148                           
  1149                           ;spi.c: 20: TRISCbits.TRISC0 = 0;
  1150  077B  100E               	bcf	14,0	;volatile
  1151                           
  1152                           ;spi.c: 21: TRISCbits.TRISC2 = 0;
  1153  077C  110E               	bcf	14,2	;volatile
  1154                           
  1155                           ;spi.c: 22: TRISCbits.TRISC1 = 1;
  1156  077D  148E               	bsf	14,1	;volatile
  1157                           
  1158                           ;spi.c: 23: TRISCbits.TRISC4 = 0;
  1159  077E  120E               	bcf	14,4	;volatile
  1160                           
  1161                           ;spi.c: 24: TRISAbits.TRISA2 = 1;
  1162  077F  150C               	bsf	12,2	;volatile
  1163                           
  1164                           ;spi.c: 25: OPTION_REGbits.nWPUEN = 0;
  1165  0780  1395               	bcf	21,7	;volatile
  1166                           
  1167                           ;spi.c: 26: WPUAbits.WPUA5 = 1;
  1168  0781  0024               	movlb	4	; select bank4
  1169  0782  168C               	bsf	12,5	;volatile
  1170                           
  1171                           ;spi.c: 27: WPUAbits.WPUA2 = 1;
  1172  0783  150C               	bsf	12,2	;volatile
  1173                           
  1174                           ;spi.c: 28: APFCON = 0b00010000;
  1175  0784  3010               	movlw	16
  1176  0785  0022               	movlb	2	; select bank2
  1177  0786  009D               	movwf	29	;volatile
  1178                           
  1179                           ;spi.c: 29: ANSELA = 0x00;
  1180  0787  0023               	movlb	3	; select bank3
  1181  0788  018C               	clrf	12	;volatile
  1182                           
  1183                           ;spi.c: 30: ANSELC = 0x00;
  1184  0789  018E               	clrf	14	;volatile
  1185  078A  0008               	return
  1186  078B                     __end_of_configIO:	
  1187  007E                     btemp	set	126	;btemp
  1188  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    13
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    craftPacket@packet	PTR unsigned char  size(1) Largest target is 4
		 -> main@packet(COMMON[4]), 

    uartWritePacket@packet	PTR unsigned char  size(1) Largest target is 4
		 -> main@packet(COMMON[4]), 


Critical Paths under _main in COMMON

    _main->_uartWritePacket
    _uartWritePacket->_uartWriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     527
                                              6 COMMON     6     6      0
                           _SPI_init
                           _configIO
                        _craftPacket
                           _initUart
                    _uartWritePacket
 ---------------------------------------------------------------------------------
 (1) _uartWritePacket                                      3     3      0     144
                                              3 COMMON     3     3      0
                      _uartWriteByte
 ---------------------------------------------------------------------------------
 (2) _uartWriteByte                                        3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _craftPacket                                          4     2      2     326
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             0     0      0       0
                           _configIO
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_init
     _configIO
   _configIO
   _craftPacket
   _initUart
   _uartWritePacket
     _uartWriteByte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Oct 30 13:58:17 2017

         ??_uartWriteByte 0070               __CFG_CP$OFF 0000                        l17 07C4  
                      l18 07B6                        u24 07AF                        u25 07AE  
       ??_uartWritePacket 0073               __CFG_LVP$ON 0000                       l614 07F5  
                     l622 076C                       l608 07E1                       l492 07AA  
                     l496 07B8         craftPacket@packet 0071                       u137 07A2  
                     u147 07B9                       u157 07C7              __CFG_BORV$LO 0000  
                     wreg 0009              __CFG_WDTE$ON 0000              __CFG_WRT$OFF 0000  
                    _main 0769                      fsr1h 0007                      indf1 0001  
                    fsr1l 0006                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 0001           __end_of_TX_ADDR 074A             __CFG_FOSC$ECH 0000  
         __end_of_RX_PW_P 075B             __CFG_MCLRE$ON 0000                     ?_main 0070  
        __end_of_SPI_init 0769                     wtemp0 007E           __initialization 07FE  
            __end_of_main 0779            __CFG_LPBOR$OFF 0000                    ??_main 0076  
                  _APFCON 011D                    _ANSELA 018C                    _ANSELC 018E  
    __size_of_craftPacket 0033            __CFG_PWRTE$OFF 0000          uartWriteByte@dat 0071  
        uartWritePacket@i 0075          __end_of_configIO 078B            __CFG_STVREN$ON 0000  
        __end_of_initUart 074F         __end_of_RX_ADDR_P 0755   __end_of__initialization 07FE  
         _uartWritePacket 078B            __pcstackCOMMON 0070                 ?_SPI_init 0070  
          _OPTION_REGbits 0095     uartWritePacket@packet 0074                __pmaintext 0769  
   __end_of_uartWriteByte 07CB                ??_SPI_init 0070                   _SSP1BUF 0211  
               ?_configIO 0070   __end_of_uartWritePacket 079E                   _TX_ADDR 0749  
                 _RX_PW_P 0755                 ?_initUart 0070                   __ptext1 078B  
                 __ptext2 079E                   __ptext3 074A                   __ptext4 07CB  
                 __ptext5 075B                   __ptext6 0779                ??_configIO 0070  
    end_of_initialization 07FE                ??_initUart 0070             ??_craftPacket 0072  
               _TRISAbits 008C                 _TRISCbits 008E                 _RX_ADDR_P 074F  
        ?_uartWritePacket 0070                main@packet 0078       start_initialization 07FE  
       __size_of_SPI_init 000E       __end_of_craftPacket 07FE                 ___latbits 0000  
       __size_of_configIO 0012         __size_of_initUart 0005               _craftPacket 07CB  
  __size_of_uartWriteByte 002D                  _LATAbits 010C                  _LATCbits 010E  
                _PIR1bits 0011                  _SPI_init 075B                  _WPUAbits 020C  
          uartWriteByte@b 0072             _uartWriteByte 079E              _SSP1CON1bits 0215  
                _configIO 0779                  _initUart 074A             __size_of_main 0010  
__size_of_uartWritePacket 0013            ?_uartWriteByte 0070              _SSP1STATbits 0214  
       __CFG_CLKOUTEN$OFF 0000              craftPacket@x 0073              craftPacket@y 0070  
           __pstringtext1 0755             __pstringtext2 074F             __pstringtext3 0749  
            ?_craftPacket 0070  

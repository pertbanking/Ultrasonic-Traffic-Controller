
DriveRobotTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000240  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  000002b4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000aee  00000000  00000000  000003b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007b0  00000000  00000000  00000ea2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000053c  00000000  00000000  00001652  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000170  00000000  00000000  00001b90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a8  00000000  00000000  00001d00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002cb  00000000  00000000  000021a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00002473  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 aa 00 	jmp	0x154	; 0x154 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e4       	ldi	r30, 0x40	; 64
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 30       	cpi	r26, 0x04	; 4
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 11 01 	call	0x222	; 0x222 <main>
  9e:	0c 94 1e 01 	jmp	0x23c	; 0x23c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_default>

000000a6 <__vector_default>:
}

void brake(void) {
	forward(0);
	PORTD = 0b01101000;
	PORTB = 0b00001000;
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	0f 90       	pop	r0
  b2:	0f be       	out	0x3f, r0	; 63
  b4:	0f 90       	pop	r0
  b6:	1f 90       	pop	r1
  b8:	18 95       	reti

000000ba <__vector_11>:
  ba:	1f 92       	push	r1
  bc:	0f 92       	push	r0
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	0f 92       	push	r0
  c2:	11 24       	eor	r1, r1
  c4:	8f 93       	push	r24
  c6:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <pulseEmit>
  ca:	88 23       	and	r24, r24
  cc:	29 f0       	breq	.+10     	; 0xd8 <__vector_11+0x1e>
  ce:	5f 9b       	sbis	0x0b, 7	; 11
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <__vector_11+0x1c>
  d2:	5f 98       	cbi	0x0b, 7	; 11
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <__vector_11+0x1e>
  d6:	5f 9a       	sbi	0x0b, 7	; 11
  d8:	8f 91       	pop	r24
  da:	0f 90       	pop	r0
  dc:	0f be       	out	0x3f, r0	; 63
  de:	0f 90       	pop	r0
  e0:	1f 90       	pop	r1
  e2:	18 95       	reti

000000e4 <ultrasoundEmitterInit>:
  e4:	57 9a       	sbi	0x0a, 7	; 10
  e6:	5f 98       	cbi	0x0b, 7	; 11
  e8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
  ec:	e1 e8       	ldi	r30, 0x81	; 129
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	88 e0       	ldi	r24, 0x08	; 8
  f2:	80 83       	st	Z, r24
  f4:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
  f8:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  fc:	8a ef       	ldi	r24, 0xFA	; 250
  fe:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 102:	8f ef       	ldi	r24, 0xFF	; 255
 104:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 108:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 10c:	af e6       	ldi	r26, 0x6F	; 111
 10e:	b0 e0       	ldi	r27, 0x00	; 0
 110:	8c 91       	ld	r24, X
 112:	82 60       	ori	r24, 0x02	; 2
 114:	8c 93       	st	X, r24
 116:	16 ba       	out	0x16, r1	; 22
 118:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <pulseEmit>
 11c:	80 81       	ld	r24, Z
 11e:	81 60       	ori	r24, 0x01	; 1
 120:	80 83       	st	Z, r24
 122:	08 95       	ret

00000124 <uartInit>:
 124:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 128:	87 e6       	ldi	r24, 0x67	; 103
 12a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 12e:	80 e9       	ldi	r24, 0x90	; 144
 130:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 134:	86 e0       	ldi	r24, 0x06	; 6
 136:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 13a:	08 95       	ret

0000013c <pwmOn>:
 13c:	83 ef       	ldi	r24, 0xF3	; 243
 13e:	84 bd       	out	0x24, r24	; 36
 140:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 144:	08 95       	ret

00000146 <forward>:
 146:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 14a:	17 bc       	out	0x27, r1	; 39
 14c:	88 bd       	out	0x28, r24	; 40
 14e:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 152:	08 95       	ret

00000154 <__vector_18>:
 154:	1f 92       	push	r1
 156:	0f 92       	push	r0
 158:	0f b6       	in	r0, 0x3f	; 63
 15a:	0f 92       	push	r0
 15c:	11 24       	eor	r1, r1
 15e:	2f 93       	push	r18
 160:	3f 93       	push	r19
 162:	4f 93       	push	r20
 164:	5f 93       	push	r21
 166:	6f 93       	push	r22
 168:	7f 93       	push	r23
 16a:	8f 93       	push	r24
 16c:	9f 93       	push	r25
 16e:	af 93       	push	r26
 170:	bf 93       	push	r27
 172:	ef 93       	push	r30
 174:	ff 93       	push	r31
 176:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 17a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 17e:	81 30       	cpi	r24, 0x01	; 1
 180:	71 f0       	breq	.+28     	; 0x19e <__vector_18+0x4a>
 182:	28 f0       	brcs	.+10     	; 0x18e <__vector_18+0x3a>
 184:	82 30       	cpi	r24, 0x02	; 2
 186:	99 f0       	breq	.+38     	; 0x1ae <__vector_18+0x5a>
 188:	83 30       	cpi	r24, 0x03	; 3
 18a:	c9 f0       	breq	.+50     	; 0x1be <__vector_18+0x6a>
 18c:	2a c0       	rjmp	.+84     	; 0x1e2 <__vector_18+0x8e>
 18e:	92 36       	cpi	r25, 0x62	; 98
 190:	51 f5       	brne	.+84     	; 0x1e6 <__vector_18+0x92>
 192:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 196:	8f 5f       	subi	r24, 0xFF	; 255
 198:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 19c:	24 c0       	rjmp	.+72     	; 0x1e6 <__vector_18+0x92>
 19e:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <x>
 1a2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 1a6:	8f 5f       	subi	r24, 0xFF	; 255
 1a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 1ac:	1c c0       	rjmp	.+56     	; 0x1e6 <__vector_18+0x92>
 1ae:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <y>
 1b2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 1b6:	8f 5f       	subi	r24, 0xFF	; 255
 1b8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 1bc:	14 c0       	rjmp	.+40     	; 0x1e6 <__vector_18+0x92>
 1be:	91 3e       	cpi	r25, 0xE1	; 225
 1c0:	91 f4       	brne	.+36     	; 0x1e6 <__vector_18+0x92>
 1c2:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
 1c6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <x>
 1ca:	0e 94 a3 00 	call	0x146	; 0x146 <forward>
 1ce:	2f ef       	ldi	r18, 0xFF	; 255
 1d0:	81 e1       	ldi	r24, 0x11	; 17
 1d2:	9a e7       	ldi	r25, 0x7A	; 122
 1d4:	21 50       	subi	r18, 0x01	; 1
 1d6:	80 40       	sbci	r24, 0x00	; 0
 1d8:	90 40       	sbci	r25, 0x00	; 0
 1da:	e1 f7       	brne	.-8      	; 0x1d4 <__vector_18+0x80>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <__vector_18+0x8a>
 1de:	00 00       	nop
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <__vector_18+0x92>
 1e2:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
 1e6:	ff 91       	pop	r31
 1e8:	ef 91       	pop	r30
 1ea:	bf 91       	pop	r27
 1ec:	af 91       	pop	r26
 1ee:	9f 91       	pop	r25
 1f0:	8f 91       	pop	r24
 1f2:	7f 91       	pop	r23
 1f4:	6f 91       	pop	r22
 1f6:	5f 91       	pop	r21
 1f8:	4f 91       	pop	r20
 1fa:	3f 91       	pop	r19
 1fc:	2f 91       	pop	r18
 1fe:	0f 90       	pop	r0
 200:	0f be       	out	0x3f, r0	; 63
 202:	0f 90       	pop	r0
 204:	1f 90       	pop	r1
 206:	18 95       	reti

00000208 <configPWM>:
}

void configPWM(void) {
	DDRB |= 0b00001000;
 208:	23 9a       	sbi	0x04, 3	; 4
	DDRD |= 0b01101000;
 20a:	8a b1       	in	r24, 0x0a	; 10
 20c:	88 66       	ori	r24, 0x68	; 104
 20e:	8a b9       	out	0x0a, r24	; 10
	TCCR0B = 0b00000001;
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	85 bd       	out	0x25, r24	; 37
	TCCR2B = 0b00000001;
 214:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
	TIMSK0 = 0b00000000;  // Changed these for you.
 218:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	TIMSK2 = 0b00000000;  // Interrupts aren't used in Fast PWM, so TIMSK's aren't set.
 21c:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 220:	08 95       	ret

00000222 <main>:

int main(void)
{
	int test = 0;
	
	configPWM();
 222:	0e 94 04 01 	call	0x208	; 0x208 <configPWM>
	pwmOn();
 226:	0e 94 9e 00 	call	0x13c	; 0x13c <pwmOn>
	ultrasoundEmitterInit();
 22a:	0e 94 72 00 	call	0xe4	; 0xe4 <ultrasoundEmitterInit>
	uartInit();
 22e:	0e 94 92 00 	call	0x124	; 0x124 <uartInit>
	sei();
 232:	78 94       	sei
	
	while(1) {
		//++test;
		pulseEmit = 1;
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <pulseEmit>
 23a:	fd cf       	rjmp	.-6      	; 0x236 <main+0x14>

0000023c <_exit>:
 23c:	f8 94       	cli

0000023e <__stop_program>:
 23e:	ff cf       	rjmp	.-2      	; 0x23e <__stop_program>

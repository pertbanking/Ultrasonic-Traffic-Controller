
DriveRobotTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000242  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001ce  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  00000242  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000242  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000274  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000002b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000aab  00000000  00000000  00000334  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007a1  00000000  00000000  00000ddf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000497  00000000  00000000  00001580  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  00001a18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000468  00000000  00000000  00001b58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002a3  00000000  00000000  00001fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002263  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 75 00 	jmp	0xea	; 0xea <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ec       	ldi	r30, 0xCE	; 206
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 30       	cpi	r26, 0x03	; 3
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 dd 00 	call	0x1ba	; 0x1ba <main>
  9e:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_default>

000000a6 <__vector_default>:
}

void brake(void) {
	forward(0);
	PORTD = 0b01101000;
	PORTB = 0b00001000;
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	0f 90       	pop	r0
  b2:	0f be       	out	0x3f, r0	; 63
  b4:	0f 90       	pop	r0
  b6:	1f 90       	pop	r1
  b8:	18 95       	reti

000000ba <uartInit>:
  ba:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  be:	87 e6       	ldi	r24, 0x67	; 103
  c0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  c4:	80 e9       	ldi	r24, 0x90	; 144
  c6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  ca:	86 e0       	ldi	r24, 0x06	; 6
  cc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  d0:	08 95       	ret

000000d2 <pwmOn>:
  d2:	83 ef       	ldi	r24, 0xF3	; 243
  d4:	84 bd       	out	0x24, r24	; 36
  d6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
  da:	08 95       	ret

000000dc <forward>:
  dc:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
  e0:	17 bc       	out	0x27, r1	; 39
  e2:	88 bd       	out	0x28, r24	; 40
  e4:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
  e8:	08 95       	ret

000000ea <__vector_18>:
  ea:	1f 92       	push	r1
  ec:	0f 92       	push	r0
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	0f 92       	push	r0
  f2:	11 24       	eor	r1, r1
  f4:	2f 93       	push	r18
  f6:	3f 93       	push	r19
  f8:	4f 93       	push	r20
  fa:	5f 93       	push	r21
  fc:	6f 93       	push	r22
  fe:	7f 93       	push	r23
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
 104:	af 93       	push	r26
 106:	bf 93       	push	r27
 108:	ef 93       	push	r30
 10a:	ff 93       	push	r31
 10c:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 110:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 114:	81 30       	cpi	r24, 0x01	; 1
 116:	71 f0       	breq	.+28     	; 0x134 <__vector_18+0x4a>
 118:	28 f0       	brcs	.+10     	; 0x124 <__vector_18+0x3a>
 11a:	82 30       	cpi	r24, 0x02	; 2
 11c:	99 f0       	breq	.+38     	; 0x144 <__vector_18+0x5a>
 11e:	83 30       	cpi	r24, 0x03	; 3
 120:	c9 f0       	breq	.+50     	; 0x154 <__vector_18+0x6a>
 122:	2a c0       	rjmp	.+84     	; 0x178 <__vector_18+0x8e>
 124:	92 36       	cpi	r25, 0x62	; 98
 126:	51 f5       	brne	.+84     	; 0x17c <__vector_18+0x92>
 128:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 12c:	8f 5f       	subi	r24, 0xFF	; 255
 12e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 132:	24 c0       	rjmp	.+72     	; 0x17c <__vector_18+0x92>
 134:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <x>
 138:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 13c:	8f 5f       	subi	r24, 0xFF	; 255
 13e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 142:	1c c0       	rjmp	.+56     	; 0x17c <__vector_18+0x92>
 144:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <y>
 148:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 14c:	8f 5f       	subi	r24, 0xFF	; 255
 14e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 152:	14 c0       	rjmp	.+40     	; 0x17c <__vector_18+0x92>
 154:	91 3e       	cpi	r25, 0xE1	; 225
 156:	91 f4       	brne	.+36     	; 0x17c <__vector_18+0x92>
 158:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
 15c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <x>
 160:	0e 94 6e 00 	call	0xdc	; 0xdc <forward>
 164:	2f e3       	ldi	r18, 0x3F	; 63
 166:	82 e4       	ldi	r24, 0x42	; 66
 168:	9f e0       	ldi	r25, 0x0F	; 15
 16a:	21 50       	subi	r18, 0x01	; 1
 16c:	80 40       	sbci	r24, 0x00	; 0
 16e:	90 40       	sbci	r25, 0x00	; 0
 170:	e1 f7       	brne	.-8      	; 0x16a <__vector_18+0x80>
 172:	00 c0       	rjmp	.+0      	; 0x174 <__vector_18+0x8a>
 174:	00 00       	nop
 176:	02 c0       	rjmp	.+4      	; 0x17c <__vector_18+0x92>
 178:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
 17c:	ff 91       	pop	r31
 17e:	ef 91       	pop	r30
 180:	bf 91       	pop	r27
 182:	af 91       	pop	r26
 184:	9f 91       	pop	r25
 186:	8f 91       	pop	r24
 188:	7f 91       	pop	r23
 18a:	6f 91       	pop	r22
 18c:	5f 91       	pop	r21
 18e:	4f 91       	pop	r20
 190:	3f 91       	pop	r19
 192:	2f 91       	pop	r18
 194:	0f 90       	pop	r0
 196:	0f be       	out	0x3f, r0	; 63
 198:	0f 90       	pop	r0
 19a:	1f 90       	pop	r1
 19c:	18 95       	reti

0000019e <configPWM>:
}

void configPWM(void) {
	DDRB |= 0b00001000;
 19e:	23 9a       	sbi	0x04, 3	; 4
	DDRD |= 0b01101000;
 1a0:	8a b1       	in	r24, 0x0a	; 10
 1a2:	88 66       	ori	r24, 0x68	; 104
 1a4:	8a b9       	out	0x0a, r24	; 10
	TCCR0B = 0b00000001;
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	85 bd       	out	0x25, r24	; 37
	TCCR2B = 0b00000001;
 1aa:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
	TIMSK0 = 0b00000110;
 1ae:	86 e0       	ldi	r24, 0x06	; 6
 1b0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	TIMSK2 = 0b00000110;
 1b4:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 1b8:	08 95       	ret

000001ba <main>:

int main(void)
{
	int test = 0;
	
	configPWM();
 1ba:	0e 94 cf 00 	call	0x19e	; 0x19e <configPWM>
	pwmOn();
 1be:	0e 94 69 00 	call	0xd2	; 0xd2 <pwmOn>
	uartInit();
 1c2:	0e 94 5d 00 	call	0xba	; 0xba <uartInit>
	sei();
 1c6:	78 94       	sei
 1c8:	ff cf       	rjmp	.-2      	; 0x1c8 <main+0xe>

000001ca <_exit>:
 1ca:	f8 94       	cli

000001cc <__stop_program>:
 1cc:	ff cf       	rjmp	.-2      	; 0x1cc <__stop_program>
